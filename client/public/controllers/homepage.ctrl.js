//---------Homepage logic--------------
$(document).ready( function() {

//------Code runs when the document is ready:--------

//Masonry plug-in ininitialization
var container = document.querySelector('#masonry');

var masonry = new Masonry(container, {
	columnWidth: 30,
itemSelector: '.post' //HTML element to be used containing the .post class.
});

//Layout the posts generated by AngularJS
masonry.layout();

});

//Audio.js plug-in initialization
audiojs.events.ready(function() {
	var as = audiojs.createAll();
});


//AngularJS controller
angular.module('app').controller("HomepageController", function($http){
	//Obtaining the scope obj. of the controller
	var vmodel = this;
	vmodel.searchString = "";

	//------Event handlers-------

	//User asking for file upload
	vmodel.openUpload = function(upType){
		//Show or hide the upload form
		vmodel.showUpload = !vmodel.showUpload;

		if(vmodel.showUpload){
			//Update upload header value:
			switch(upType){
				case 0:
					vmodel.uploadTitle = "image";
				break;

				case 1:
					vmodel.uploadTitle = "audio";
				break;

				case 2:
					vmodel.uploadTitle = "video";
				break;
			}
		}

	};

	vmodel.addPost = function(){

		//TODO Complete a validation 
		if(vmodel.postDescription.length > 0){

			//TODO Anadir comentario a esto
			$http.post('/mvenue-database/homepage/' + $.parseJSON(sessionStorage.getItem('clientAuthentication')).token, {data: vmodel.postDescription, media_path: '', media_type: 2}).then(
				function successCallback(response){
					//Clear description from post bar
					vmodel.postDescription = "";

					//Load data from server
					vmodel.userID = response.data[1];
            		vmodel.posts = response.data[0];
				},
				function errorCallback(response){
					if(response.status == 400){
						alert("Invalid username or password. Please try again.");
					}
					else{
						alert("There was an internal error. Please try again soon.");
					}

				}
			);
	  }
	};

	vmodel.supplyEditModal = function(uPost){
		//Bind the data from the selected post into the edit modal
		vmodel.editData = uPost;
		//Show modal
		$('#modalEditPost').modal('show');
	};

	//Function needed in case the user closes the modal without saving any changes.
	vmodel.clearModal = function(){
		vmodel.editData = null;
	};

	vmodel.editPost = function(){
		//TODO Here the edited post should be verified first. If media was added, update the media_type property.
		//Verification must also be made whether there was a modification or not.

		//TODO Complete a validation 
		if(vmodel.editData.data.length > 0){
			//Send a UPDATE request to save the edited data of the chosen post
			$http.put('/mvenue-database/homepage/?tk=' + $.parseJSON(sessionStorage.getItem('clientAuthentication')).token
	        + "&postID="+ vmodel.editData.post_id.toString(), {data: vmodel.editData.data, media_path: vmodel.editData.media_path, media_type: vmodel.editData.media_type}).then(function successCallback(response){
	        	//Refresh post data with info data from server
	        	vmodel.userID = response.data[1];
	            vmodel.posts = response.data[0];
	            //Erase edit data and hide modal.
	            vmodel.clearModal();
	            $('#modalEditPost').modal('hide');

	        }, function errorCallback(response){
	                if(response.status == 401){
	                    alert("Authentication error! Your session may have been expired. Please log-in!");
	                    //Erase current token
	                    sessionStorage.removeItem('clientAuthentication');
	                    //Re-direct user to the log-in page
	                    window.location.href = "login.html";
	                }
	                else{
	                	//Erase edit data. User can choose to close  modal or keep trying.
	                	vmodel.clearModal();

	                    alert("Server Internal Error: " + response.data);
	                }

	        });
		} else {
			alert ("You must have some text in a post!");
		}
	};//End editPost.

	vmodel.deletePost = function(postID){
		//Send a DELETE request to erase the chosen post
		//Http data would be sent within a query string.
		$http.delete('/mvenue-database/homepage/?tk=' + $.parseJSON(sessionStorage.getItem('clientAuthentication')).token
        + "&postID="+postID.toString()).then(function successCallback(response){
        	//Refresh post data with info data from server
        	vmodel.userID = response.data[1];
            vmodel.posts = response.data[0];

        }, function errorCallback(response){
                if(response.status == 401){
                    alert("Authentication error! Your session may have been expired. Please log-in!");
                    //Erase current token
                    sessionStorage.removeItem('clientAuthentication');
                    //Re-direct user to the log-in page
                    window.location.href = "login.html";
                }
                else{
                    alert("Server Internal Error: " + response.data);
                }

        });

	};

	vmodel.search = function(){
		if(vmodel.searchString.length > 0){
			//Request database results related to the search string
			$http.get('/mvenue-database/search/?tk=' + $.parseJSON(sessionStorage.getItem('clientAuthentication')).token
        			+ "&searchString="+vmodel.searchString).then(function successCallback(response){
		        	//Show results to the user, if any:

		        	if(response.data.length > 0){
		        		//There are results related to the search string

		        		//Store posts in a temporary variable
		        		vmodel.tempPosts = vmodel.posts;
		        		vmodel.posts = null;
		        		//Show search results
		        		vmodel.searchResults = response.data;		        		
		        	} else {
		        		//TODO Show a 'content box' with a 'No results' string.		        		
		        		vmodel.tempPosts = vmodel.posts; //Store posts in a temporary variable
		        		vmodel.posts = null;
		        		vmodel.searchResults = [{id: 0, data: "" ,type: 1 ,entityname: "No results are available."}];
		        	}

		        }, function errorCallback(response){
		                if(response.status == 401){
		                    alert("Authentication error! Your session may have been expired. Please log-in!");
		                    //Erase current token
		                    sessionStorage.removeItem('clientAuthentication');
		                    //Re-direct user to the log-in page
		                    window.location.href = "login.html";
		                }
		                else{
		                    alert("Server Internal Error: " + response.data);
		                }

		        });
		}
	};

	vmodel.watchSearchString = function(){
		//If the user is removes the search string, the interpret as: not looking for something
		if(vmodel.searchString.length <= 0){
			//Restore user posts
			if(vmodel.posts == null){ 
				//In case user starts typing but then erases the search string without pressing the search button.
				vmodel.posts = vmodel.tempPosts;
			}
			vmodel.tempPosts = null;
			vmodel.searchResults = null;			
		}
	};

	vmodel.resultClick = function(result){
		//Re-direct user to the profile page, leaving a cookie
		sessionStorage.setItem('profileData', result);
		window.location.href = "profile_page.html";
	};

	//TODO-----------Dummy operations: for design purposes-----------------
	// vmodel.showUpload = true;
	//vmodel.post_type = 1;

    //-----------Client-Server interaction--------------
    //TODO Verify if the user is logged in first!
    //TODO The below code must exist on every other page that requires a logged user

    //Verify the existace ofa token. In other words, if a user is logged in.
	if(sessionStorage.getItem('clientAuthentication') === undefined || sessionStorage.getItem('clientAuthentication') === null){
		window.location.href = "index.html";
	}

	$http.get('/mvenue-database/homepage/' + $.parseJSON(sessionStorage.getItem('clientAuthentication')).token
        ).then(function successCallback(response){
        	//------Recieve and manage response data-------

            //Load data from server
            vmodel.userID = response.data[1];
            vmodel.posts = response.data[0];

        }, function errorCallback(response){
                if(response.status == 401){
                    alert("Authentication error! Your session may have been expired. Please log-in!");
                    //Erase current token
                    sessionStorage.removeItem('clientAuthentication');
                    //Re-direct user to the log-in page
                    window.location.href = "login.html";
                }
                else{
                    alert("Server Internal Error: " + response.data);
                }

        });

});